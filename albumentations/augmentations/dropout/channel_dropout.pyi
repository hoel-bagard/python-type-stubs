"""
This type stub file was generated by pyright.
"""

from typing import Any, Mapping, Tuple, Union

import numpy as np
from albumentations.core.transforms_interface import ImageOnlyTransform


__all__ = ["ChannelDropout"]
class ChannelDropout(ImageOnlyTransform):
    """Randomly Drop Channels in the input Image.

    Args:
        channel_drop_range (int, int): range from which we choose the number of channels to drop.
        fill_value (int, float): pixel value for the dropped channel.
        p (float): probability of applying the transform. Default: 0.5.

    Targets:
        image

    Image types:
        uint8, uint16, unit32, float32
    """
    def __init__(self, channel_drop_range: Tuple[int, int] = ..., fill_value: Union[int, float] = ..., always_apply: bool = ..., p: float = ...) -> None:
        ...
    
    def apply(self, img: np.ndarray, channels_to_drop: Tuple[int, ...] = ..., **params) -> np.ndarray:
        ...
    
    def get_params_dependent_on_targets(self, params: Mapping[str, Any]): # -> dict[str, list[int]]:
        ...
    
    def get_transform_init_args_names(self) -> Tuple[str, ...]:
        ...
    
    @property
    def targets_as_params(self): # -> list[str]:
        ...
    


